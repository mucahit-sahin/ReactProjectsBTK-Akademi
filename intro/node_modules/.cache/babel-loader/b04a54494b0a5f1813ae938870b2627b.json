{"ast":null,"code":"var _jsxFileName = \"/home/mucahit/Desktop/ReactProjects/intro/src/App.js\";\nimport React, { Component } from \"react\";\nimport CategoryList from \"./CategoryList\";\nimport Navi from \"./Navi\";\nimport ProductList from \"./ProductList\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport alertify from \"alertifyjs\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport CartList from \"./CartList\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentCategory: \"\",\n      products: [],\n      cart: []\n    };\n\n    this.addToCart = product => {\n      let newCart = this.state.cart;\n      var addedItem = newCart.find(c => c.product.id === product.id);\n\n      if (addedItem) {\n        addedItem.quantity++;\n      } else {\n        newCart.push({\n          product: product,\n          quantity: 1\n        });\n      }\n\n      this.setState({\n        cart: newCart\n      });\n      alertify.success(product.productName + \" added to cart\", 2);\n    };\n\n    this.removeFromCart = product => {\n      let newCart = this.state.cart.filter(c => c.product.id !== product.id);\n      this.setState({\n        cart: newCart\n      });\n    };\n\n    this.changeCategory = category => {\n      this.setState({\n        currentCategory: category.categoryName\n      });\n      this.getProducts(category.id);\n    };\n\n    this.getProducts = categoryId => {\n      let url = \"http://localhost:3000/products\";\n\n      if (categoryId) {\n        url += \"?categoryId=\" + categoryId;\n      }\n\n      fetch(url).then(response => response.json()).then(data => this.setState({\n        products: data\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  render() {\n    let productInfo = {\n      title: \"Product List\",\n      baskabisey: \"baska\"\n    };\n    let categoryInfo = {\n      title: \"Category List\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navi, {\n      removeFromCart: this.removeFromCart,\n      cart: this.state.cart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CategoryList, {\n      currentCategory: this.state.currentCategory,\n      changeCategory: this.changeCategory,\n      info: categoryInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(ProductList, Object.assign({}, props, {\n        addToCart: this.addToCart,\n        products: this.state.products,\n        currentCategory: this.state.currentCategory,\n        info: productInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/cart\",\n      render: props => /*#__PURE__*/React.createElement(ProductList, Object.assign({}, props, {\n        addToCart: this.addToCart,\n        products: this.state.products,\n        currentCategory: this.state.currentCategory,\n        info: productInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/home/mucahit/Desktop/ReactProjects/intro/src/App.js"],"names":["React","Component","CategoryList","Navi","ProductList","Container","Row","Col","alertify","Route","Switch","NotFound","CartList","App","state","currentCategory","products","cart","addToCart","product","newCart","addedItem","find","c","id","quantity","push","setState","success","productName","removeFromCart","filter","changeCategory","category","categoryName","getProducts","categoryId","url","fetch","then","response","json","data","componentDidMount","render","productInfo","title","baskabisey","categoryInfo","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CategoryList from \"./CategoryList\";\nimport Navi from \"./Navi\";\nimport ProductList from \"./ProductList\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport alertify from \"alertifyjs\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport CartList from \"./CartList\";\n\nexport default class App extends Component {\n  state = { currentCategory: \"\", products: [], cart: [] };\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  addToCart = (product) => {\n    let newCart = this.state.cart;\n    var addedItem = newCart.find((c) => c.product.id === product.id);\n    if (addedItem) {\n      addedItem.quantity++;\n    } else {\n      newCart.push({ product: product, quantity: 1 });\n    }\n    this.setState({ cart: newCart });\n    alertify.success(product.productName + \" added to cart\", 2);\n  };\n\n  removeFromCart = (product) => {\n    let newCart = this.state.cart.filter((c) => c.product.id !== product.id);\n    this.setState({ cart: newCart });\n  };\n\n  changeCategory = (category) => {\n    this.setState({ currentCategory: category.categoryName });\n    this.getProducts(category.id);\n  };\n\n  getProducts = (categoryId) => {\n    let url = \"http://localhost:3000/products\";\n    if (categoryId) {\n      url += \"?categoryId=\" + categoryId;\n    }\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => this.setState({ products: data }));\n  };\n\n  render() {\n    let productInfo = { title: \"Product List\", baskabisey: \"baska\" };\n    let categoryInfo = { title: \"Category List\" };\n\n    return (\n      <div>\n        <Container>\n          <Navi\n            removeFromCart={this.removeFromCart}\n            cart={this.state.cart}\n          ></Navi>\n          <Row>\n            <Col xs=\"3\">\n              <CategoryList\n                currentCategory={this.state.currentCategory}\n                changeCategory={this.changeCategory}\n                info={categoryInfo}\n              ></CategoryList>\n            </Col>\n            <Col xs=\"9\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={(props) => (\n                    <ProductList\n                      {...props}\n                      addToCart={this.addToCart}\n                      products={this.state.products}\n                      currentCategory={this.state.currentCategory}\n                      info={productInfo}\n                    ></ProductList>\n                  )}\n                ></Route>\n                <Route exact path=\"/cart\" render={(props) => (\n                    <ProductList\n                      {...props}\n                      addToCart={this.addToCart}\n                      products={this.state.products}\n                      currentCategory={this.state.currentCategory}\n                      info={productInfo}\n                    ></ProductList>\n                  )}></Route>\n                <Route component={NotFound}></Route>\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}